name: CI Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    services:
      postgres:
        image: postgres:13
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: github_crawler_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v3
      with:
        fetch-depth: 1
        
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Create test config
      run: |
        cat > config.py << EOL
        class Settings:
            database_url = "postgresql://postgres:postgres@localhost:5432/github_crawler_test"
            github_api_url = "https://api.github.com/graphql"
            github_token_multi_thread = ["${{ secrets.GITHUB_TOKEN }}"]
            batch_size = 50
            total_num_repo = 100
            max_retries = 3
            default_min_stars = 100
            default_partition_threshold = 1000
            default_start_year = 2024
            default_start_month = 1
        settings = Settings()
        EOL
        
    - name: Initialize database
      run: python src/models.py
        
    - name: Run tests
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        python -m pytest tests/ -v
        
    - name: Test crawler (single mode)
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        python src/crawler.py --mode single --min-stars 1000 --language python --batch-size 5
        
    - name: Lint code
      run: |
        pip install flake8
        flake8 src/ tests/ --max-line-length=100 --extend-ignore=E203

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    
    - name: Run security scan
      uses: github/codeql-action/init@v2
      with:
        languages: python
        
    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v2 